{
    GLOBAL = {
	ENTER = (
	    "setStateTo: HEAD_FOR_SUN"
	);
	EXIT = (
	);
	UPDATE = (
	);
    };
    GO_TO_WAYPOINT_PLANET = {
	ACCEPT_DISTRESS_CALL = (
	    setTargetToFoundTarget,
	    deployEscorts,
	    groupAttackTarget
	);
	ATTACKED = (
	    setTargetToPrimaryAggressor,
	    groupAttackTarget
	);
	COURSE_OK = (
	    "setSpeedFactorTo: 0.8",
	    performFlyToRangeFromDestination
	);
	DESIRED_RANGE_ACHIEVED = (
	    "setStateTo: HEAD_FOR_PLANET"
	);
	ENTER = (
	    "setDesiredRangeTo: 50.0",
	    checkCourseToDestination
	);
	EXIT = (
	);
	GROUP_ATTACK_TARGET = (
	    setTargetToFoundTarget,
	    "setAITo: interceptAI.plist"
	);
	INCOMING_MISSILE = (
	    fightOrFleeMissile,
	    setTargetToPrimaryAggressor,
	    deployEscorts,
	    groupAttackTarget,
	    "setAITo: interceptAI.plist",
	    "setStateTo: INBOUND_LOOT"
	);
	RESTARTED = (
	    "setStateTo: INBOUND_LOOT"
	);
	UPDATE = (
	);
	WAYPOINT_SET = (
	    "setDesiredRangeTo: 50.0",
	    checkCourseToDestination
	);
    };
    GO_TO_WAYPOINT_SUN = {
	ACCEPT_DISTRESS_CALL = (
	    setTargetToFoundTarget,
	    deployEscorts,
	    groupAttackTarget
	);
	ATTACKED = (
	    setTargetToPrimaryAggressor,
	    groupAttackTarget
	);
	COURSE_OK = (
	    "setSpeedFactorTo: 0.8",
	    performFlyToRangeFromDestination
	);
	DESIRED_RANGE_ACHIEVED = (
	    "setStateTo: HEAD_FOR_SUN"
	);
	ENTER = (
	    "setDesiredRangeTo: 50.0",
	    checkCourseToDestination
	);
	EXIT = (
	);
	GROUP_ATTACK_TARGET = (
	    setTargetToFoundTarget,
	    "setAITo: interceptAI.plist"
	);
	INCOMING_MISSILE = (
	    fightOrFleeMissile,
	    setTargetToPrimaryAggressor,
	    deployEscorts,
	    groupAttackTarget,
	    "setAITo: interceptAI.plist",
	    "setStateTo: OUTBOUND_LOOT"
	);
	RESTARTED = (
	    "setStateTo: OUTBOUND_LOOT"
	);
	UPDATE = (
	);
	WAYPOINT_SET = (
	    "setDesiredRangeTo: 50.0",
	    checkCourseToDestination
	);
    };
    HEAD_FOR_PLANET = {
	ACCEPT_DISTRESS_CALL = (
	    setTargetToFoundTarget,
	    deployEscorts,
	    groupAttackTarget
	);
	ATTACKED = (
	    setTargetToPrimaryAggressor,
	    groupAttackTarget
	);
	COURSE_OK = (
	    "setSpeedFactorTo: 0.8",
	    performFlyToRangeFromDestination
	);
	DESIRED_RANGE_ACHIEVED = (
	    "setStateTo: HEAD_FOR_SUN"
	);
	ENTER = (
	    setCourseToPlanet,
	    "setDesiredRangeTo: 50000.0",
	    checkCourseToDestination
	);
	EXIT = (
	);
	GROUP_ATTACK_TARGET = (
	    setTargetToFoundTarget,
	    "setAITo: interceptAI.plist"
	);
	INCOMING_MISSILE = (
	    fightOrFleeMissile,
	    setTargetToPrimaryAggressor,
	    deployEscorts,
	    groupAttackTarget,
	    "setAITo: interceptAI.plist"
	);
	RESTARTED = (
	    "setStateTo: INBOUND_LOOT"
	);
	TARGET_FOUND = (
	    setTargetToFoundTarget,
	    deployEscorts,
	    groupAttackTarget
	);
	UPDATE = (
	    scanForOffenders,
	    "pauseAI: 10.0"
	);
	WAYPOINT_SET = (
	    "setStateTo: GO_TO_WAYPOINT_PLANET"
	);
    };
    HEAD_FOR_SUN = {
	ACCEPT_DISTRESS_CALL = (
	    setTargetToFoundTarget,
	    deployEscorts,
	    groupAttackTarget
	);
	APPROACH_COORDINATES = (
	    setDestinationFromCoordinates,
	    "setDesiredRangeTo: 25000",
	    checkCourseToDestination
	);
	ATTACKED = (
	    setTargetToPrimaryAggressor,
	    groupAttackTarget
	);
	COURSE_OK = (
	    "setSpeedFactorTo: 0.80",
	    performFlyToRangeFromDestination
	);
	ENTER = (
	    setSunSkimStartCoordinates
	);
	EXIT = (
	);
	GROUP_ATTACK_TARGET = (
	    setTargetToFoundTarget,
	    "setAITo: interceptAI.plist"
	);
	INCOMING_MISSILE = (
	    fightOrFleeMissile,
	    setTargetToPrimaryAggressor,
	    deployEscorts,
	    groupAttackTarget,
	    "setAITo: interceptAI.plist",
	    "setStateTo: OUTBOUND_LOOT"
	);
	RESTARTED = (
	    "setStateTo: OUTBOUND_LOOT"
	);
	TARGET_FOUND = (
	    setTargetToFoundTarget,
	    deployEscorts,
	    groupAttackTarget
	);
	UPDATE = (
	    scanForOffenders,
	    "pauseAI: 10.0"
	);
	WAIT_FOR_SUN = (
	    "pauseAI: 10.0",
	    setSunSkimStartCoordinates
	);
	WAYPOINT_SET = (
	    "setStateTo: GO_TO_WAYPOINT_SUN"
	);
    };
    INBOUND_LOOT = {
	ATTACKED = (
	    setTargetToPrimaryAggressor,
	    groupAttackTarget
	);
	ENTER = (
	    "setSpeedTo: 0.0",
	    performIdle
	);
	EXIT = (
	);
	GROUP_ATTACK_TARGET = (
	    setTargetToFoundTarget,
	    "setAITo: interceptAI.plist"
	);
	INCOMING_MISSILE = (
	    fightOrFleeMissile,
	    setTargetToPrimaryAggressor,
	    deployEscorts,
	    groupAttackTarget,
	    "setAITo: interceptAI.plist",
	    "setStateTo: INBOUND_LOOT"
	);
	NOTHING_FOUND = (
	    "setStateTo: HEAD_FOR_PLANET"
	);
	TARGET_FOUND = (
	    setTargetToFoundTarget,
	    "setAITo: collectLootAI.plist"
	);
	UPDATE = (
	    scanForLoot,
	    "pauseAI: 10.0"
	);
    };
    OUTBOUND_LOOT = {
	ATTACKED = (
	    setTargetToPrimaryAggressor,
	    groupAttackTarget
	);
	ENTER = (
	    "setSpeedTo: 0.0",
	    performIdle
	);
	EXIT = (
	);
	GROUP_ATTACK_TARGET = (
	    setTargetToFoundTarget,
	    "setAITo: interceptAI.plist"
	);
	INCOMING_MISSILE = (
	    fightOrFleeMissile,
	    setTargetToPrimaryAggressor,
	    deployEscorts,
	    groupAttackTarget,
	    "setAITo: interceptAI.plist",
	    "setStateTo: OUTBOUND_LOOT"
	);
	NOTHING_FOUND = (
	    "setStateTo: HEAD_FOR_SUN"
	);
	TARGET_FOUND = (
	    setTargetToFoundTarget,
	    "setAITo: collectLootAI.plist"
	);
	UPDATE = (
	    scanForLoot,
	    "pauseAI: 10.0"
	);
    };
}