{
	// *** Basic lists ***
	condition =
	(
		"Docked",
		"Green",
		"Yellow",
		"Red"
	);
	economy =
	(
		"Rich Industrial",
		"Average Industrial",
		"Poor Industrial",
		"Mainly Industrial",
		"Mainly Agricultural",
		"Rich Agricultural",
		"Average Agricultural",
		"Poor Agricultural"
	);
	government =
	(
		"Anarchy",
		"Feudal",
		"Multi-Government",
		"Dictatorship",
		"Communist",
		"Confederacy",
		"Democracy",
		"Corporate State"
	);
	legal_status =
	(
		"Clean",
		"Offender",
		"Fugitive"
	);
	rating =
	(
		"Harmless",
		"Mostly Harmless",
		"Poor",
		"Average",
		"Above Average",
		"Competent",
		"Dangerous",
		"☆ Deadly ☆",
		"★★★ E L I T E ★★★"
	);
	weapon_name =
	(
		"none",
		"Twin Plasma Cannon",
		"Pulse Laser",
		"Beam Laser",
		"Mining Laser",
		"Military Laser"
	);
	
	// *** Inhabitant description generator ***
	inhabitants =
	(
		(
			"Large",
			"Fierce",
			"Small"
		),
		(
			"Green",
			"Red",
			"Yellow",
			"Blue",
			"Black",
			"Harmless"
		),
		(
			"Slimy",
			"Bug-Eyed",
			"Horned",
			"Bony",
			"Fat",
			"Furry"
		),
		(
			"Rodent",
			"Frog",
			"Lizard",
			"Lobster",
			"Bird",
			"Humanoid",
			"Feline",
			"Insect"
		),
		(
			"Rodents",
			"Frogs",
			"Lizards",
			"Lobsters",
			"Birds",
			"Humanoids",
			"Felines",
			"Insects"
		)
	);
	
	// *** Planet description generator ***
	system_description =
	(
		(
			"fabled",
			"notable",
			"well known",
			"famous",
			"noted"
		),
		(
			"very",
			"mildly",
			"most",
			"reasonably",
			""
		),
		(
			"ancient",
			"[20]",
			"great",
			"vast",
			"pink"
		),
		(
			"[29] [28] plantations",
			"mountains",
			"[27]",
			"[19] forests",
			"oceans"
		),
		(
			"shyness",
			"silliness",
			"mating traditions",
			"loathing of [5]",
			"love for [5]"
		),
		(
			"food blenders",
			"tourists",
			"poetry",
			"discos",
			"[13]"
		),
		(
			"talking tree",
			"crab",
			"bat",
			"lobst",
			"%R"
		),
		(
			"beset",
			"plagued",
			"ravaged",
			"cursed",
			"scourged"
		),
		(
			"[21] civil war",
			"[26] [23] [24]s",
			"[26] disease",
			"[21] earthquakes",
			"[21] solar activity"
		),
		(
			"its [2] [3]",
			"the %I [23] [24]",
			"its inhabitants’ [25] [4]",
			"[32]",
			"its [12] [13]"
		),
		(
			"juice",
			"brandy",
			"water",
			"brew",
			"gargle blasters"
		),
		(
			"%R",
			"%I [24]",
			"%I %R",
			"%I [26]",
			"[26] %R"
		),
		(
			"fabulous",
			"exotic",
			"hoopy",
			"unusual",
			"exciting"
		),
		(
			"cuisine",
			"night life",
			"casinos",
			"sit coms",
			"[32]"
		),
		(
			"%H",
			"The planet %H",
			"The world %H",
			"This planet",
			"This world"
		),
		(
			"n unremarkable",
			" boring",
			" dull",
			" tedious",
			" revolting"
		),
		(
			"planet",
			"world",
			"place",
			"little planet",
			"dump"
		),
		(
			"wasp",
			"moth",
			"grub",
			"ant",
			"%R"
		),
		(
			"poet",
			"arts graduate",
			"yak",
			"snail",
			"slug"
		),
		(
			"tropical",
			"dense",
			"rain",
			"impenetrable",
			"exuberant"
		),
		(
			"funny",
			"weird",
			"unusual",
			"strange",
			"peculiar"
		),
		(
			"frequent",
			"occasional",
			"unpredictable",
			"dreadful",
			"deadly"
		),
		(
			"[1] [0] for [9]",
			"[1] [0] for [9] and [9]",
			"[7] by [8]",
			"[1] [0] for [9] but [7] by [8]",
			"a[15] [16]"
		),
		(
			"[26]",
			"mountain",
			"edible",
			"tree",
			"spotted"
		),
		(
			"[30]",
			"[31]",
			"[6]oid",
			"[18]",
			"[17]"
		),
		(
			"ancient",
			"exceptional",
			"eccentric",
			"ingrained",
			"[20]"
		),
		(
			"killer",
			"deadly",
			"evil",
			"lethal",
			"vicious"
		),
		(
			"parking meters",
			"dust clouds",
			"ice bergs",
			"rock formations",
			"volcanoes"
		),
		(
			"plant",
			"tulip",
			"banana",
			"corn",
			"%Rweed"
		),
		(
			"%R",
			"%I %R",
			"%I [26]",
			"inhabitant",
			"%I %R"
		),
		(
			"shrew",
			"beast",
			"bison",
			"snake",
			"wolf"
		),
		(
			"leopard",
			"cat",
			"monkey",
			"goat",
			"fish"
		),
		(
			"[11] [10]",
			"%I [30] [33]",
			"its [12] [31] [33]",
			"[34] [35]",
			"[11] [10]"
		),
		(
			"meat",
			"cutlet",
			"steak",
			"burgers",
			"soup"
		),
		(
			"ice",
			"mud",
			"Zero-G",
			"vacuum",
			"%I ultra"
		),
		(
			"hockey",
			"cricket",
			"karate",
			"polo",
			"tennis"
		),
	);
	
	// *** Planet names and other random names ***
	// this string must always be the same length (98 characters). Digrams (pairs of letters) are selected from it to build names.
	digrams = "ABOUSEITILETSTONLONUTHNOALLEXEGEZACEBISOUSESARMAINDIREA’ERATENBERALAVETIEDORQUANTEISRION";
	// If the second character of a digram is equal to this single-character string, it is dropped when generating planet names (but kept for other random names).
	digrams-apostrophe = "’";
	// this string represents the 4 character phonemes associated with each digram.
	phonograms = "AEb=UW==sEH=IHt=IHl=EHt=st==AAn=lOW=nUW=T===nOW=AEl=lEY=hEY=JEH=zEY=sEH=bIY=sOW=UHs=EHz=AEr=mAE=IHn=dIY=rEY=EH==UXr=AEt=EHn=bEH=rAX=lAX=vEH=tIY=EHd=AAr=kw==AXn=tEY=IHz=rIY=AAn=";
	
	// *** Misc. messages ***
	// Messages used when awarding bounties
	"bounty-d"						= ( "Bounty: %d" );
	"total-f-credits"				= ( "Total: %.1f ₢" );
	"right-on-commander"			= ( "Right On, Commander!" );
	
	// Assorted messages used by the onboard computer
	"autopilot-on"					= ( "Autopilot engaged." );
	"autopilot-off"					= ( "Autopilot disengaged." );
	"autopilot-out-of-range"		= ( "Could not contact station for docking instructions." );
	"autopilot-cannot-dock-with-target" = ( "Target is not capable of autopilot-docking." );
	"autopilot-denied"				= ( "Station refuses to issue docking instructions." );
	"witch-to-@-in-f-seconds"		= ( "Witchspace to %@ in %.0f s." );
	"witch-blocked-by-@"			= ( "Witchspace jump aborted (too close to %@.)" );
	"witch-user-abort"				= ( "Witchspace jump aborted." );
	"witch-no-target"				= ( "No target system set." );
	"witch-no-fuel"					= ( "Insufficient fuel for witchspace jump." );
	"witch-too-far"					= ( "Engines incapable of witchspace jump to that target." );
	"witch-engine-malfunction"		= ( "Witchspace engine malfunction!" );
	"witch-galactic-in-f-seconds"	= ( "Intergalactic jump in %.0f s." );
	"game-paused"					= ( "Game paused." );
	"game-paused-options"			= ( "Press F2 for options, P to resume." );
	"game-saved"					= ( "Game saved." );
	"mouse-on"						= ( "Mouse control on." );
	"mouse-off"						= ( "Mouse control off." );
	"target-lost"					= ( "Target lost." );
	"@-locked-onto-@"				= ( "%@ locked onto %@." );
	"ecm-on"						= ( "ECM system activated." );
	"ecm-out-of-juice"				= ( "ECM system deactivated (no energy left)." );
	"jump-mass-locked"				= ( "Hyperspeed mass-locked." );
	"fuel-inject-on"				= ( "Fuel injection engaged." );
	"fuel-out"						= ( "Witchdrive fuel exhausted." );
	"ident-on"						= ( "Ident system active." );
	"ident-off"						= ( "Ident system deactivated." );
	"missile-locked-onto-@"			= ( "Missile locked onto %@." );
	"missile-armed"					= ( "Missile armed." );
	"mine-armed"					= ( "Mine armed." );
	"missile-safe"					= ( "Missiles on safety." );
	"incoming-missile"				= ( "Incoming missile." );
	"energy-low"					= ( "Energy low." );
	"energy-bomb-activated"			= ( "Energy bomb triggered." );
	"weapon-overheat"				= ( "Weapon system overheated." );
	"weapon-out-of-juice"			= ( "Weapon system inactive (no energy left)." );
	"escape-sequence"				= ( "Escape sequence active." );
	"@-ejected"						= ( "%@ ejected." );
	"@-ready-to-eject"				= ( "Ready to eject %@." );
	"ready-to-eject-@"				= ( "Ready to eject %@." );
	"@-scooped"						= ( "%@ scooped." );
	"scoop-captured-@"				= ( "You captured %@." );
	"scoop-rescued-@"				= ( "You rescued %@." );
	"scoop-got-slave"				= ( "You captured a slave." );
	"fuel-scoop-active"				= ( "Fuel scoop active." );
	"hold-locked"					= ( "Cargo ejection system offline (speed too high)." );
	"hold-full"						= ( "Cargo holds full." );
	// cloaking device ..
	"cloak-on"						= ( "Cloaking device activated." );
	"cloak-off"						= ( "Cloaking device deactivated." );
	"cloak-low-juice"				= ( "Not enough energy to activate cloaking device." );
	
	// Assorted messages sent out by ships etc..
	/*	%H - homeworld
			%I - homeworld+ian
			%R - random digrams
			%@ - text to be inserted at this point
			%d, %f, %x etc. - printf type variables to be inserted
			[$text] = $text is an entry here that will be expanded
	*/
	"beg-for-mercy" =
	(
		"No!",
		"Help! Anyone!",
		"Our systems are failing, please let us flee!",
		"Leave us alone!",
		"Don’t shoot, please!",
		"Please stop! Have mercy!",
		"Please don’t kill us! I beg you!",
		"S.O.S. … S.O.S. … S.O.S. …"
	);
	"describe-pirate" =
	(
		"brigand",
		"pirate",
		"hostile vessel",
		"marauder",
		"criminal"
	);
	"describe-Pirate" =	// Capitalized version of describe-pirate
	(
		"Brigand",
		"Pirate",
		"Hostile vessel",
		"Marauder",
		"Criminal"
	);
	"distress-call" =
	(
		"We are [7] by [describe-pirate]s! Please help!",
		"Our vessel is under attack, please help us.",
		"[describe-Pirate]s are attacking us. Please assist!",
		"Help! Anyone!",
		"Mayday! Mayday! Mayday! We are under attack.",
		"Help! They’re firing on us!",
		"Mayday! Please assist. Mayday! Please assist.",
		"S.O.S. … S.O.S. … S.O.S. …"
	);
	"buoy-distress-call" =
	(
		"You have attacked a Navigational Beacon. This is an illegal act.",
		"%H Navigational Beacon reports an illegal act of vandalism.",
		"%H Navigational Beacon to attacking craft. Please desist.",
		"Attacking a Navigational Beacon is illegal. Police are on their way."
	);
	"thanks-for-assist" =
	(
		"Thank you for the assistance.",
		"Thanks!.",
		"%R bless you!",
		"Oh thank you! Help at last!"
	);
	"police-thanks-for-assist" =
	(
		"Thank you for the assistance.",
		"%H Police thank you for your assistance."
	);
	"thargoid_curses" =
	(
		"Guard your [4], human [18]-[31]!",
		"Eat [6], [5]!",
		"We’ll use your [20] [27] for our [33]!",
		"%R! %R! %R!"
	);
	"police-warning" =
	(
		"Offender vessel, this is %H Police. You have been scanned and will face penalties if you choose to dock here.",
		"[describe-Pirate], this is %H Police. Fines will be imposed if you dock here.",
		"This is the police. Docking at %H will require legal compensation for your offences.",
		"This is the police. %H Station will fine you for your offences when you dock."
	);
	"police-attack-warning" =
	(
		"Offender, your craft will be destroyed under GalCop codes.",
		"Please slow your engines and do not attempt to dodge our lasers, [describe-pirate]!",
		"%R! Leave now, or face Police retribution.",
		"[describe-Pirate], you are not welcome in this system.",
		"Offender vessel, this is %H Police. Leave now or be fired upon.",
		"[describe-Pirate], you have been scheduled for termination.",
		"Leave %H now or be destroyed.",
		"%H Police. Offending ship targeted. Moving to intercept."
	);
	// /general docking
	"docking-welcome" =
	(
		"Docking systems active.",
		"Docking permission granted. We have uploaded docking instructions to your flight console."
	);
	"docking-begin-final-aproach" =
	(
		"You are on final approach.",
		"Beginning final approach sequence."
	);
	// /general docking
	// station
	"station-welcome" =
	(
		"Welcome to %H space dock.",
		"Docking systems active. Welcome to %H.",
		"Welcome to %H. Please have your ship manifest ready for inspection upon docking",
		"%H Station here. We have uploaded docking instructions to your flight console.",
		"Salutations spacefarer! Welcome to %H.",
		"%H welcomes you. Docking procedures should take no more than a few minutes, please stand by.",
		"Welcome to %H. Please be patient while we guide your ship into space dock.",
		"Greetings! %H Station traffic control welcomes you."
	);
	"station-begin-final-aproach" =
	(
		"You are on final approach to %H Station.",
		"Now entering %H space dock.",
		"Beginning final approach sequence.",
		"Entering final approach to %H Station."
	);
	"station-hold-position" =
	(
		"Please be patient - you are being held in a docking queue.",
		"Docking sequence will recommence shortly. Thank you for your patience.",
		"Traffic is heavy, please continue to hold until we can clear an approach for you.",
		"You are being queued for docking. Thank you for your patience."
	);
	"station-acknowledges-hold-position" =
	(
		"Please be patient - we are preparing to accommodate your vessel.",
		"Docking sequence will recommence shortly. Thank you for waiting.",
		"We are preparing an approach for you. Please wait.",
		"Preparing approach for docking. Thank you for your patience.",
		"Your docking request is acknowledged. Please hold for clearance.",
		"We are manoeuvring in preparation for your approach. Please hold."
	);
	"station-docking-refused-to-fugitive" =
	(
		"%H Station does NOT welcome fugitives!"
	);
	// /station
	"fined" =
	(
		"You have been fined %d credits.",
		"You have been fined %d credits, and made to pick up litter in the main hangar deck.",
		"You have been fined %d credits, and are forced to clean up after the [6]oids.",
		"You have been fined %d credits, and sent for “attitude adjustment”."
	);
	// system description after a nova
	"nova-system-description" =
	(
		"The %I sun has gone nova, destroying the planet and all life here. Beware of navigational and radiological hazards in this system."
	);
	// trumbles
	"trumbles-eat-@"				= ( "Trumbles have eaten a cargopod of %@." );
	// internal damage
	"@-damaged"						= ( "%@ damaged." );
	"@-destroyed"					= ( "%@ destroyed." );
	
	// icons for the hud
	"EQ_HARDENED_MISSILE" =
	(
		 0,  3,
		 2,  1,
		 2, -3,
		 0, -1,
		-2, -3,
		-2,  1
	);
	// human surname namegen
	"nom" =
	(
		"%R",
		"[nom1]"
	);
	"nom1" =
	(
		"ben [nom11]",
		"Mc[nom11]",
		"O’[nom11]",
		"Ath[enom2]",
		"Br[nomvoweliy]an",
		"Bran[nom2]",
		"C[nomvowelar][nom2]",
		"D[nomvowelar][nom2]",
		"Dav[nomvoweliy][nom2]",
		"Denn[nomvoweliy][nom2]",
		"Eccl[enom2]",
		"Fa[nomvoweliy]r[nom2]",
		"Folk[nom2]",
		"Garr[enom2]",
		"Good[nom2]",
		"Hector",
		"Inn[enom2]",
		"Jam[enom2]",
		"Jon[nom2]",
		"Kir[nom2]",
		"L[nomvoweliy]ttle[nom2]",
		"L[nomvowelar][nom2]",
		"Na[nomvoweliy]l[nom2]",
		"Neil[nom2]",
		"Peter[nom2]",
		"Orbit[nom2]",
		"Roger[nom2]",
		"Sam[nom2]",
		"Star[nom2]",
		"Th[nomvowelur]r[nom2]",
		"Wilkin[nom2]",
		"William[nom2]",
		"%H[nom2]",
		"%R[nom2]",
		"%R-[nom1]",
		"[nom1]-[nom11]"
	);
	"nom11" =
	(
		"Ath[enom2]",
		"Br[nomvoweliy]an",
		"Bran[nom2]",
		"C[nomvowelar][nom2]",
		"D[nomvowelar][nom2]",
		"Dav[nomvoweliy][nom2]",
		"Denn[nomvoweliy][nom2]",
		"Folk[nom2]",
		"Garri[nom2]",
		"Good[nom2]",
		"Hector",
		"Inn[enom2]",
		"Jam[enom2]",
		"Jon[nom2]",
		"Kir[nom2]",
		"L[nomvoweliy]ttle[nom2]",
		"L[nomvowelar][nom2]",
		"Na[nomvoweliy]l[nom2]",
		"Neil[nom2]",
		"Peter[nom2]",
		"Roger[nom2]",
		"Sam[nom2]",
		"Star[nom2]",
		"Th[nomvowelur]r[nom2]",
		"Wilkin[nom2]",
		"William[nom2]",
		"%H[nom2]",
		"%R[nom2]"
	);
	"nom2" =
	(
		"",
		"b[nomvowelur]rn",
		"f[nomvowelur]r",
		"st[nomvowelur]n",
		"sen",
		"son",
		"son",
		"sdott[nomvoweliy]r",
		"s",
		"s",
		"sby",
		"er",
		"f[nomvoweliy]re",
		"l[nomvoweliy]ng"
	);
	"enom2" =
	(
		"e",
		"[nomvowelie]b[nomvowelur]rn",
		"[nomvowelie]f[nomvowelur]r",
		"[nomvowelie]st[nomvowelur]n",
		"[nomvowelie]sen",
		"[nomvowelie]son",
		"eson",
		"[nomvowelie]sdott[nomvoweliy]r",
		"[nomvowelie]s",
		"es",
		"esby",
		"[nomvowelie]f[nomvoweliy]re",
		"l[nomvoweliy]ng"
	);
	"nomvowelie" =
	(
		"i",
		"e",
		"e",
		"ie"
	);
	"nomvowelar" =
	(
		"ar",
		"aw",
		"arre",
		"our"
	);
	"nomvowelur" =
	(
		"e",
		"o",
		"u",
		"ou",
		"ai"
	);
	"nomvoweliy" =
	(
		"i",
		"y"
	);
	
	// The four main views
	"forward-view-string"			= "Forward View";
	"aft-view-string"				= "Aft View";
	"port-view-string"				= "Port View";
	"starboard-view-string"			= "Starboard View";
	
	// GUI strings common to more than one screens
	"gui-back"						= " Back ";
	"gui-more"						= " More ";
	"press-space-commander"			= "Press Space Commander";
	
	// Intro1 screen
	"game-copyright"				= "by Giles Williams and contributors © 2003-2008";
	"theme-music-credit"			= "Oolite Theme Music by NoSleep © 2004";
	"load-previous-commander"		= "Load Previous Commander (Y/N)?";
	
	// Status screen
	"status-commander-@"			= "Commander %@";
	"status-present-system"			= "Present System:";
	"status-hyperspace-system"		= "Hyperspace System:";
	"status-condition"				= "Condition:";
	"status-fuel"					= "Fuel:";
	"status-light-years-desc"		= "Light Years";
	"status-cash"					= "Cash:";
	"status-legal-status"			= "Legal Status:";
	"status-rating"					= "Rating:";
	"status-equipment"				= "Equipment:";
	"equipment-fwd-weapon-@"		= "Forward %@";
	"equipment-aft-weapon-@"		= "Aft %@";
	"equipment-stb-weapon-@"		= "Starboard %@";
	"equipment-port-weapon-@"		= "Port %@";
	"equipment-single-pass-berth-@"	= "1 Passenger Berth";
	"equipment-multiple-pass-berth-@" = "%d Passenger Berths";
	"cash-quantity"					= "%.1f ₢";
	"manifest-cargo-quantity-format" = "%d %@ × %@";	// $count $units × $commodityName
	
	// Short Range Chart Screen
	"short-range-chart-title"		= "Short Range Chart";
	"short-range-chart-distance-f"	= "Distance: %.1f Light Years";
	"short-range-chart-est-travel-time-f" = "Estimated Travel Time: %.1f Hours";
	
	// Long Range Chart Screen
	"long-range-chart-title-d"		= "Galactic Chart %d";
	"long-range-chart-distance-f"	= "Distance: %.1f Light Years";
	"long-range-chart-est-travel-time-f" = "Estimated Travel Time: %.1f Hours";
	"long-range-chart-find-planet-@" = "Find planet: %@";
	
	// Market screen
	"@-commodity-market"			= "%@ Commodity Market";
	"commodity-column-title"		= "Commodity:";
	"price-column-title"			= "Price:";
	"for-sale-column-title"			= "For sale:";
	"in-hold-column-title"			= "In hold:";
	"cash-f-load-d-of-d"			= "Cash: %.1f ₢.  Load %d of %d t.";
	"cargo-tons-symbol"				= "t";
	"cargo-grams-symbol"			= "g";
	"cargo-kilograms-symbol"		= "kg";
	"commodity-quantity-none"		= "—";
	
	// System data screen
	"sysdata-planet-name-@"			= "Data on %@";
	"sysdata-eco"					= "Economy:";
	"sysdata-govt"					= "Government:";
	"sysdata-tl"					= "Tech Level:";
	"sysdata-pop"					= "Population:";
	"sysdata-billion-word"			= "Billion";
	"sysdata-prod"					= "Gross productivity:";
	"sysdata-prod-worth"			= " %5d M ₢";
	"sysdata-radius"				= "Average radius:";
	"system-description-string"		= "[14] is [22].";
	
	// Options (sometimes referred to as loadsave) screen
	"options-quick-save"			= " Quick-Save ";
	"options-save-commander"		= " Save Commander ";
	"options-load-commander"		= " Load Commander ";
	"options-begin-new-game"		= " Begin New Game ";
	"options-game-options"			= " Game Options… ";
	"options-exit-game"				= " Exit Game ";
	"options-reset-to-unrestricted-play" = " Reset to Unrestricted Play ";
	"options-reset-to-strict-play"	= " Reset to Strict Play ";
	
	// Gameoptions screen
	"gameoptions-sound-volume"				= " Sound Volume: ";
	"gameoptions-sound-volume-mute"			= " Sound Volume: MUTE ";
	"gameoptions-volume-external-only"		= " Sound Volume: External Control Only ";
	"gameoptions-show-growl-messages-@"		= " Show Growl Messages: %@ ";
	"gameoptions-spoken-messages-yes"		= " Spoken Messages: YES ";
	"gameoptions-spoken-messages-no"		= " Spoken Messages: NO ";
	"gameoptions-itunes-yes"				= " iTunes Integration: YES ";
	"gameoptions-itunes-no"					= " iTunes Integration: NO ";
	"gameoptions-fullscreen-mode-d-by-d-at-g-hz" = " Full Screen Mode: %d x %d at %.3g Hz ";
	"gameoptions-fullscreen-mode-d-by-d"	= " Full Screen Mode: %d x %d ";
	"gameoptions-play-in-window"			= " Play in Window ";
	"gameoptions-play-in-fullscreen"		= " Play in Full Screen ";
	"gameoptions-joystick-configuration"	= " Joystick Configuration ";
	"gameoptions-wireframe-graphics-yes"	= " Wireframe Graphics: YES ";
	"gameoptions-wireframe-graphics-no"		= " Wireframe Graphics: NO ";
	"gameoptions-reduced-detail-yes"		= " Reduced Detail: YES ";
	"gameoptions-reduced-detail-no"			= " Reduced Detail: NO ";
	"gameoptions-shaderfx-not-available"	= " Shader Effects: Not available ";
	"gameoptions-shaderfx-@"				= " Shader Effects: %@ ";
	"shaderfx-not-available"				= "Not available";
	"shaderfx-off"							= "Off";
	"shaderfx-simple"						= "Simple";
	"shaderfx-full"							= "Full";
	
	// Equip ship screen
	"equip-title"					= "Ship Outfitting";
	"equip-cash-f"					= "Cash: %.1f ₢.";
	"equip-no-equipment-available-for-purchase" = "No equipment available for purchase.";
	"equip-repair-@"				= " Repair:%@";
	"upgradeinfo-@-price-is-for-repairing" = "%@ (Price is for repairing the existing system).";
	"forward-facing-string"			= " Forward ";
	"aft-facing-string"				= " Aft ";
	"port-facing-string"			= " Port ";
	"starboard-facing-string"		= " Starboard ";
	
	// Purchase ship screen
	"ship-purchase-price"			= "%d ₢";
	
	// Contracts screen
	"@-contracts-title"				= "%@ Carrier Market";
	
	// contracts-to and contracts-within are common for both passengers and cargo.
	"contracts-to"					= "To:";
	"contracts-within"				= "Within:";
	"contracts-passenger-name"		= "Passenger Name:";
	"contracts-passenger-advance"	= "Advance:";
	"contracts-passenger-fee"		= "Fee:";
	"contracts-cargo-cargotype"		= "Cargo:";
	"contracts-cargo-premium"		= "Premium:";
	"contracts-cargo-pays"			= "Pays:";
	"contracts-cash-f-load-d-of-d-passengers-d-of-d-berths" = "Cash: %.1f ₢.  Load %d of %d t. Passengers %d of %d berths.";
	"contracts-@-a-@-wishes-to-go-to-@" = "%@, a %@, wishes to go to %@.";
	"contracts-@-the-route-is-f-light-years-long-a-minimum-of-d-jumps" = "%@ The route is %.1f light years long, a minimum of %d jumps.";
	"contracts-@-you-will-need-to-depart-within-@-in-order-to-arrive-within-@-time" = "%@ You will need to depart within %@, in order to arrive within %@ time.";
	"contracts-@-will-pay-llu-credits-d-in-advance-and-llu-credits-on-arrival" = "%@ Will pay %llu ₢: %d ₢ in advance, and %llu ₢ on arrival.";
	"contracts-deliver-a-cargo-of-@-to-@" = "Deliver a cargo of %@ to %@.";
	"contracts-@-the-contract-will-cost-you-f-credits-and-pay-a-total-of-f-credits" = "%@ The contract will cost you %.1f ₢, and pay a total of %.1f ₢.";
	"contracts-no-time"				= "no time";
	"contracts-day-word"			= "day";
	"contracts-day-word-plural"		= "days";
	"contracts-hour-word"			= "hr";
	"contracts-hour-word-plural"	= "hrs";
	"contracts-minute-word"			= "min";
	"contracts-minute-word-plural"	= "mins";
	"contracts-second-word"			= "sec";
	"contracts-second-word-plural"	= "secs";
	
	// Ship’s manifest screen
	"manifest-title"				= "Ship’s Manifest";
	"manifest-none"					= " None.";
	"manifest-cargo-d-d"			= "Cargo %d t (%d t):";
	"manifest-passengers-d-d"		= "Passengers %d (%d):";
	"manifest-contracts"			= "Contracts:";
	"manifest-missions"				= "Missions:";
	
	// Shipyard screen
	"@-shipyard-title"				= "%@ Ships For Sale";
	"shipyard-shiptype"				= "Ship Type:";
	"shipyard-price"				= "Price:";
	"shipyard-cargo"				= "Cargo:";
	"shipyard-cargo-d-tc"			= "Cargo: %d TC";
	"shipyard-speed"				= "Speed:";
	"shipyard-speed-f-ls"			= "Speed: %.3f LS";
	"shipyard-no-ships-available-for-purchase" = "No ships available for purchase.";
	"shipyard-your-@-trade-in-value-d" = "Your %@’s trade-in value: %d.0 ₢.";
	"shipyard-total-available-f-cr-f-cr-plus-d-trade" = "Total available: %.1f ₢. (%.1f ₢ Cash + %d.0 ₢ Trade.)";
	"passenger-berth-plural"		= "Passenger Berths";
	"passenger-berth-single"		= "Passenger Berth";
	"extra-@-@"						= " Extra %@ (%@)";
	"plus-@"						= " Plus %@.";
	"shipyard-standard-customer-model" = " Standard customer model.";
	"shipyard-forward-weapon-has-been-upgraded-to-a-@" = " Forward weapon has been upgraded to a %@.";
	"shipyard-forward-weapon-upgraded-to-@" = " Forward weapon upgraded to %@.";
	"shipyard-selling-price-d-credits" = " Selling price %d ₢.";
	"shipyard-price-d-credits"		= " Price %d ₢.";
	
	// Load/Save screens shared information
	"loadsavescreen-commander-name" = "Commander Name";
	"loadsavescreen-rating"		= "Rating";
	"loadsavescreen-no-commanders-found" = "No commanders found";
	"loadsavescreen-commander-@-rated-@-has-llu-Cr-legal-status-@-ship-@-location-@-g-@-timestamp-@" = "Commander %@ is rated %@ and has %llu ₢ in the bank. Legal status: %@. Ship: %@. Location: %@ (G%d). Timestamp: %@";
	
	// Load commander screen
	"loadscreen-title"				= "Select Commander";
	
	// Save/Overwrite commander screens
	"savescreen-title"				= "Save Commander";
	"savescreen-commander-name-@"	= "Commander name: %@";
	"savescreen-commander-name"		= "Commander name: ";
	"overwrite-save-commander-@"	= "Save Commander %@";
	"overwritescreen-commander-@-already-exists-overwrite-query" = "Commander %@ already exists - overwrite this saved game?";
	"overwritescreen-yes"			= " YES ";
	"overwritescreen-no"			= " NO ";
	
	// Mission screen
	"mission-information"			= "Mission Information";
	
	// Game Over screen
	"gameoverscreen-game-over"		= "Game Over";
	"gameoverscreen-press-space"	= "Press Space";
	
	// Various HUD dials and/or messages and miscellaneous strings
	"no-target-string"				= "No target";
	"ident-system-string"			= "Ident system";
	"missile-string"				= "Missile";
	"communications-log-string"		= "Communications Log";
	"adjusting-word"				= " (adjusting)";
	"strict-play-enabled"			= "Strict Play Enabled";
	"unrestricted-play-enabled"		= "Unrestricted Play Enabled";
	"human-word"					= "human"; // Important - only lower case characters here!
	"human-colonial-description"	= "Human Colonial";
	"human-colonial-description-plural" = "Human Colonials";
	"clock-format"					= "%07d:%02d:%02d:%02d";
	"clock-format-adjusting"		= "%07d:%02d:%02d:%02d (adjusting)";
	
	
	// delivery reports
	"arrival-report-title"			= "%H Arrival Report";
	
	"passenger-delivered-okay-@-d-@" = "%@ thanks you, and pays you %d ₢ for delivering them to %@.";
	"passenger-delivered-late-@-d-@" = "%@ pays you %d ₢ for eventually delivering them to %@.";
	"passenger-failed-@"			= "%@ leaves your ship, annoyed that you have wasted so much of their time.";
	
	"cargo-delivered-okay-@-f"		= "Droids unload the %@ and you are paid %.1f ₢.";
	"cargo-delivered-short-@-f-d"	= "Droids unload the %@, but you are only paid %.1f ₢ as there is a %d percent shortfall.";
	"cargo-refused-short-%@"		= "You don’t have enough inventory to deliver the %@.";
	"cargo-delivered-late-@"		= "You fail to deliver the %@ on time, and no-one wants to pay for it.";
	"cargo-failed-@"				= "You fail to deliver the %@ on time, and no-one will want to pay for it.";
	
	// background scenes for GUI screens
	"gui-scene-show-planet"			= ( "target-planet   120 80 640" );
	
	// character descriptions
	// basic short desc - “A $species from $homeworld”
	"character-a-@-from-@"			= "a %@ from %@";
	
	// rewards and bounties from escapepods
	"rescue-reward-for-@@-f-credits" = "For rescuing %@, %@, their insurance pays %.1f credits.";
	"capture-reward-for-@@-f-credits" = "For capturing %@, %@, you’re paid a bounty of %.1f credits.";
	
	// Commodity names
	"commodity-name food"			= "Food";
	"commodity-name textiles"		= "Textiles";
	"commodity-name radioactives"	= "Radioactives";
	"commodity-name slaves"			= "Slaves";
	"commodity-name liquor/wines"	= "Liquor/Wines";
	"commodity-name luxuries"		= "Luxuries";
	"commodity-name narcotics"		= "Narcotics";
	"commodity-name computers"		= "Computers";
	"commodity-name machinery"		= "Machinery";
	"commodity-name alloys"			= "Alloys";
	"commodity-name firearms"		= "Firearms";
	"commodity-name furs"			= "Furs";
	"commodity-name minerals"		= "Minerals";
	"commodity-name gold"			= "Gold";
	"commodity-name platinum"		= "Platinum";
	"commodity-name gem-stones"		= "Gem-Stones";
	"commodity-name alien items"	= "Alien Items";
}
