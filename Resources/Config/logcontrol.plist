/*	This file controls the visibility of various error messages and groups of
	error messages, or “message classes”. It can be selectively overridden
	using a dictionary called “logging-enable” in Oolite’s preferences which
	allows you to reduce the flow of log messages to a more managable
	quantity.
	
	classes which are related, but not hierarchically, can be controlled using
	metaclasses, whose names start with a $. See $error etc. below for
	examples.
	
	Log output can be modified using the following preference keys:
		logging-show-app-name
		logging-show-class
		logging-show-function
		logging-show-file-and-line
	
	“logging-show-app-name” defaults to 1 under Mac OS X (where log output
	goes to a shared console) and 0 under GNUstep (where log output goes to an
	application-specific log file). “logging-show-class” defaults to 1. The
	others default to 0. 
*/


_default = yes;								// Fallback value for otherwise undefined classes. Must be yes or no.
// _override = yes;							// Use to force display of all messages (or suppress all messages). Must be yes or no.

$script_error = yes;
$error = yes;
$trouble_shooting_dump = yes;
$entity_state = yes;

// These are common types of programming problems
general = inherit;
general.subclassresponsibility = $error;
general.parametererror = $error;

exception = yes;

files = inherit;
files.notfound = $error;					// Failure to load a file.
files.notloaded = $error;					// A file should have been loaded at some earlier point, but wasn’t.

scripting = inherit;
scripting.debug = inherit;
scripting.debug.message = inherit;
scripting.debug.onoff = inherit;
scripting.scriptaction = $entity_state;
scripting.scriptaction.scriptaction = inherit;
scripting.scriptaction.noaction = inherit;
scripting.scriptaction.expanded = inherit;
scripting.scriptaction.badselector = $script_error;
scripting.spawn = inherit;
scripting.spawn.spawned = inherit;
scripting.spawn.failed = $script_error;

rendering = inherit;
rendering.opengl = inherit;
rendering.opengl.error = $error;							// Test for and display OpenGL errors
rendering.opengl.version = $trouble_shooting_dump;			// Display renderer version information at startup
rendering.opengl.extensions = $trouble_shooting_dump;		// List OpenGL extensions at startup
rendering.opengl.shaders = inherit;							// Shader-related messages
rendering.opengl.shaders.support = $trouble_shooting_dump;	// Messages about factors influencing availability of OpenGL shaders
rendering.opengl.statedump = $trouble_shooting_dump;		// Dump of OpenGL state (debug tool, currently unused)

searchpaths = inherit;
searchpaths.dumpall = $trouble_shooting_dump;

strings = inherit;
strings.conversion = $script_error;			// Conversion of text to values (vectors, quaternions etc)
strings.conversion.vector = inherit;
strings.conversion.quaternion = inherit;
strings.conversion.vectorandquaternion = inherit;
strings.conversion.randomseed = inherit;

$linked_list_error = $error;
entity = inherit;
entity.linkedlist = inherit;				// Management/verification of the lists used to track the relative position of entities.
entity.linkedlist.add = inherit;
entity.linkedlist.add.error = $linked_list_error;
entity.linkedlist.remove = inherit;
entity.linkedlist.remove.error = $linked_list_error;
entity.linkedlist.verify.error = $linked_list_error;
entity.linkedlist.update.error = $linked_list_error;
entity.behaviour = inherited;
entity.behaviour.changed = $entity_state;

ai = inherit;
ai.message = inherit;
ai.message.receive = inherit;
ai.takeaction = inherit;
ai.takeaction.takeaction = $entity_state;
ai.takeaction.noaction = $entity_state;
ai.takeaction.orphaned = $error;
ai.takeaction.debugmessage = inherit;
ai.takeaction.badselector = $script_error;

datacache = inherit;
datacache.found = inherit;
datacache.notfound = inherit;
datacache.rebuild = inherit;

universe = inherit;
universe.populate = $trouble_shooting_dump;	// “Populating a system with…” message when generating a star system

// Mac-specific
growl = inherit;
growl.error = $error;
growl.debug = no;
