/*	verifyOXP.plist
	
	Various things used internally by the OXP verifier.
*/

{
	stages =
	(
		"OOFileScannerVerifierStage",
		"OOCheckRequiresPListVerifierStage",
		"OOCheckDemoShipsPListVerifierStage"
	);
	
	logControlOverride =
	{
		// Note: only yes and no here, no inherit or $metaclass
		dataCache.rebuild.pathsChanged = "no";
		
		verifyOXP = "yes";
		verifyOXP.stage = "yes";
	};
	logShowMessageClassOverride = "no";
	
	knownRootDirectories =
	(
		// Folder names that are meaningful inside an OXP
		"AIs",
		"Config",
		"Images",
		"Models",
		"Music",
		"Scripts",
		"Shaders",
		"Sounds",
		"Textures"
	);
	
	knownConfigFiles =
	(
		"autoAImap.plist",
		"characters.plist",
		"commodities.plist",
		"customsounds.plist",
		"demoships.plist",
		"descriptions.plist",
		"equipment.plist",
		"hud.plist",
		"illegal_goods.plist",
		"keyconfig.plist",
		"material-defaults.plist",
		"missiontext.plist",
		"nebulatextures.plist",
		"planetinfo.plist",
		"requires.plist",
		"script.plist",
		"script.js",
		"shipdata.plist",
		"shipyard.plist",
		"speech_pronounciation_guide.plist",
		"startextures.plist",
		"world-scripts.plist"
	);
	
	junkFiles =
	(
		// Files generated by operating systems and tools which can be ignored.
		".DS_Store",
		"Thumbs.db",
		"zipinfo.txt"
	);
	
	readMeNames =
	{
		stems =
		(
			"readme",
			"read me",
			"read_me",
			"read me now",
			"read me first",
			"readme!",
			"read me!",
			"read_me!",
			"read me now!",
			"read me first!"
		);
		extensions =
		(
			"",
			".txt",
			".html",
			".htm",
			".rtf",
			".doc"
		);
	};
	
	requiresPListSupportedKeys =
	(
		"version",
		"max_version"
	);
}
